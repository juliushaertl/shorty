<?php
/**
* @package shorty an ownCloud url shortener plugin
* @category internet
* @author Christian Reiner
* @copyright 2011-2015 Christian Reiner <foss@christian-reiner.info>
* @license GNU Affero General Public license (AGPL)
* @link information http://apps.owncloud.com/content/show.php/Shorty?content=150401
*
* This library is free software; you can redistribute it and/or
* modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
* License as published by the Free Software Foundation; either
* version 3 of the license, or any later version.
*
* This library is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU AFFERO GENERAL PUBLIC LICENSE for more details.
*
* You should have received a copy of the GNU Affero General Public
* License along with this library.
* If not, see <http://www.gnu.org/licenses/>.
*
*/

/**
 * @file ajax/list.php
 * @brief Ajax method to retrieve a list of existing shortys
 * @return json: success/error state indicator
 * @return number: Total number of shortys in the list
 * @return json: Numeric array of all shortys, associative array of attributes as values for every single shorty contained
 * @author Christian Reiner
 */

namespace OCA\Shorty;

// swallow any accidental output generated by php notices and stuff to preserve a clean JSON reply structure
Tools::ob_control ( TRUE );

//no apps or filesystem
$RUNTIME_NOSETUPFS = TRUE;

// Sanity checks
\OCP\JSON::callCheck ( );
\OCP\JSON::checkLoggedIn ( );
\OCP\JSON::checkAppEnabled ( 'shorty' );

try
{
	// first remove any entries already marked as 'deleted'
	$query = \OCP\DB::prepare ( Query::URL_REMOVE );
	$result = $query->execute( [ ':user'=>\OCP\User::getUser() ] );
	// now comes the real list selection
//	define ('PAGE_SIZE', 100);
//	$p_offset = Type::req_argument ( 'page', Type::INTEGER, FALSE) * PAGE_SIZE;
	// pre-sort list according to user preferences
	$p_sort = Type::$SORTING[\OCP\Config::getUserValue(\OCP\User::getUser(),'shorty','list-sort-code','cd')];
	$param = [
		'sort'   => $p_sort,
//		'offset' => $p_offset,
//		'limit'  => PAGE_SIZE,
	];
	$listing = Shorty::listing($param);

	// swallow any accidental output generated by php notices and stuff to preserve a clean JSON reply structure
	Tools::ob_control ( FALSE );
	\OCP\Util::writeLog( 'shorty', sprintf("Constructed list of defined shortys holding %s entries.", sizeof($listing)), \OCP\Util::DEBUG );
	\OCP\JSON::success ( [
		'data'    => $listing,
		'level'   => 'debug',
		'count'   => sizeof($listing),
		'message' => L10n::t("Number of entries: %s", count($listing))
	] );
} catch ( Exception $e ) { Exception::JSONerror($e); }
