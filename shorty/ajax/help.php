<?php
/**
 * @package shorty an ownCloud url shortener plugin
 * @category internet
 * @author Christian Reiner
 * @copyright 2011-2015 Christian Reiner <foss@christian-reiner.info>
 * @license GNU Affero General Public license (AGPL)
 * @link information http://apps.owncloud.com/content/show.php/Shorty?content=150401
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
 * License as published by the Free Software Foundation; either
 * version 3 of the license, or any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU AFFERO GENERAL PUBLIC LICENSE for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with this library.
 * If not, see <http://www.gnu.org/licenses/>.
 *
 */

/**
 * @file ajax/book_user.php
 * @brief Ajax method to retrieve a document bundled or registered by a plugin
 * @param string $slug: comma separated list of breadcrumbs
 * @return json: structure holding key, title, breadcrumbs and content
 * @author Christian Reiner
 */

namespace OCA\Shorty;

// swallow any accidential output generated by php notices and stuff to preserve a clean JSON reply structure
Tools::ob_control ( TRUE );

//no apps or filesystem
$RUNTIME_NOSETUPFS = true;

// Sanity checks
\OCP\JSON::callCheck ( );
\OCP\JSON::checkLoggedIn ( );
\OCP\JSON::checkAppEnabled ( 'shorty' );

try
{
	$p_slug     = explode(',', Type::req_argument ( 'slug', Type::STRING, FALSE ));
	$p_document = array_shift($p_slug);
	$catalog = new Plugin\Catalog;
	$documents = $catalog->getDocuments();

	if (isset($documents[$p_document])) {
		$document = $documents[$p_document];
	} else {
		$document = $catalog;
	}
	$document->renderContent($p_slug);

	// swallow any accidentally output generated by php notices and stuff to preserve a clean JSON reply structure
	Tools::ob_control ( FALSE );

	\OCP\JSON::success ( $document->toArray() );
} catch ( Exception $e ) { Exception::JSONerror($e); }
